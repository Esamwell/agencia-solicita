// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  role      String   // "admin" ou "client"
  password  String   // senha criptografada
  phone     String?  // opcional
  since     DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  requests Request[] // um usuário pode ter várias solicitações

  @@map("users")
}

model Request {
  id          String   @id @default(uuid())
  title       String
  description String
  type        String
  status      String   // "pending", "in_progress", "completed", "cancelled"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relacionamentos
  clientId    String
  client      User     @relation(fields: [clientId], references: [id])
  comments    Comment[]

  @@map("requests")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  requestId  String
  request    Request  @relation(fields: [requestId], references: [id])
  userId     String
  user       User     @relation(fields: [userId], references: [id])

  @@map("comments")
}
